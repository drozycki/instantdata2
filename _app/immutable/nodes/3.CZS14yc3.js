import{b as w,_ as b}from"../chunks/Br3SQTEV.js";import{t as d,a as l}from"../chunks/Dq0GJUeH.js";import{i as k}from"../chunks/CeQWUEQR.js";import{p as L,a as M,s as q,c as x,g as p,m as C,b as E,r as S}from"../chunks/C3p6SYRz.js";import{h as P}from"../chunks/BQ21syy5.js";import{C as m,L as T,a as D,P as j,b as A,c as J,T as O,p as R,d as U,e as $,s as c}from"../chunks/wLx3ECR1.js";import{o as F,a as I}from"../chunks/B2-eMpLL.js";import{b as u}from"../chunks/DSk17JdS.js";var N=d('<link rel="preload" as="fetch" type="application/json">'),V=d('<div style="position: relative; width: 100vw; height: 100vh;"><p>Loaded chart</p> <canvas></canvas></div>');function Y(f,g){L(g,!1);const r=`${u}/chart_config.json`;let i=C(),a;m.register(T,D,j,A,J,O,R,U,$);async function _(){const e=await fetch(r);return JSON.parse(await e.text())}F(async()=>{const e=await _(),s=(await b(async()=>{const{default:t}=await import("../chunks/sRMH61YM.js");return{default:t}},[],import.meta.url)).default;a=new s,a.postMessage({message:"open",url:`${u}/db.sqlite`}),a.onmessage=async({data:t})=>{if(t.message==="ready")a.postMessage({message:"query",query:e.queries[0]});else if(t.message==="result")new m(p(i),{type:"line",data:{datasets:[{data:t.result.map(([y,h])=>({x:y*1e3,y:h}))}]},options:{parsing:!1,animation:{duration:0},responsive:!0,maintainAspectRatio:!1,scales:{x:{type:"time",time:{tooltipFormat:"MMM D"}},y:{}},plugins:{title:{display:!0,text:e.chartTitle},tooltip:{enabled:!0}}}});else throw new Error("Unknown worker message type")}}),I(()=>a?.terminate()),k();var o=V();P(e=>{var s=N();c(s,"href",r),l(e,s)});var n=x(o);c(n,"style","display: none;");var v=q(n,2);w(v,e=>E(i,e),()=>p(i)),S(o),l(f,o),M()}export{Y as component};
